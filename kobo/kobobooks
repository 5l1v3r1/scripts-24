#!/usr/bin/env python

import os
import kobo_utils

# Initialize with the path where the Kobo is mounted:
koboDB = kobo_utils.KoboDB('/dkobo')

# For testing: for a real Kobo, don't specify a path, just connect().
koboDB.connect(os.path.expanduser('~/kobo/d-KoboReader-shelves.sqlite'))

wanted_fields = [ 'ContentID', 'Title', 'Attribution',
                  'Description', 'NumShortcovers',
                  'IsEncrypted', 'IsDownloaded', 'adobe_location' ]

books = koboDB.get_dlist("content",
                         selectors=wanted_fields,
                         modifiers="content.BookTitle is null",
                         order="content.Title")

# What distinguishes books that are really there on the Kobo
# from books that show up in the database but not in the UI?
# It's not IsEncrypted, IsDownloaded, ___ExpirationStatus or adobe_location.

# print "========= Kobo epubs: ========"
# for book in books:
#     if book['MimeType'] == 'application/x-kobo-epub+zip':
#         print book['Title'].encode('UTF-8')
# print "========= Regular epubs: ========"
# for book in books:
#     if book['MimeType'] == 'application/epub+zip':
#         print book['Title'].encode('UTF-8')

for book in books:
    print "%s (%s)" % (book["Title"], book["Attribution"])
    print "  ContentID:", book["ContentID"]
    if book["NumShortcovers"]:
        print "  Chapters:", book["NumShortcovers"]
    print "  Encrypted?", book["IsEncrypted"],
    print "   Downloaded?", book["IsDownloaded"],
    if book["adobe_location"]:
        if book["adobe_location"] == book["ContentID"]:
            print "    adobe_location: Yes"
        else:
            print "\n  adobe_location:", book["adobe_location"]
    else:
        print

    # Description is very long; make this optional.
    # print "  Description:", book["Description"]

    print

# We need only entries where BookTitle is ''.
# Every book has lots of entries where BookTitle is the title of the book
# and Title is the current chapter, cover, etc.
# as well as the main entry where BookTitle is '' and Title is the real title.
# koboDB.print_table("content",
#                    selectors=wanted_fields,
#                    modifiers="content.BookTitle is null",
#                    order="content.Title")





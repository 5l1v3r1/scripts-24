#!/usr/bin/env python

# Print weather for several locations,
# given as city names or zip codes.
# Copyright 2013 by Akkana Peck: share and enjoy under the GPL v2 or later.

# Sample usage:
# weatherwin 'White Rock, NM' 'Los Alamos, NM' 'Cortez, CO' 'Fallbrook, CA' 'Lompoc, CA' 95128

import sys
import pywapi
import gtk, gobject
import pango
from pprint import pprint

sources = [ 'yahoo', 'weather.com' ]

# NOAA stations are kinda useless because there are so few of them
# and there's no way to map from a location to a station name.
# NOAA_stations = {
#     'San Jose, CA' : 'KSJC',
#     'Fallbrook, CA' : 'SDFBK',
#     'White Rock, NM' : 'KLAM', 
# }

class WeatherWin(gtk.Window) :
    def __init__(self):
        super(WeatherWin, self).__init__()

        self.mainbox = gtk.VBox(spacing = 10)
        self.add(self.mainbox)

        self.cityboxes = []

        self.bigfont = 'Sans 16'

    def run(self):
        self.connect("delete_event", gtk.main_quit)
        self.connect("destroy", gtk.main_quit)
        self.connect("configure_event", self.configure_event)

        self.show_all()

        # set a timeout
        gobject.timeout_add(300000, self.timer_func)

        gtk.main()

    def add_city(self, cityname):
        code, name = WeatherWin.get_code(city)
        if not code:
            print "No data for", city
            return

        thisbox = {}
        thisbox['code'] = code
        thisbox['name'] = name

        vbox = gtk.VBox()
        self.mainbox.pack_start(vbox)

        label = gtk.Label(name)
        label.modify_font(pango.FontDescription(self.bigfont))
        vbox.pack_start(label)

        def add_group_widgets(name, letter):
            '''Add widgets for one weather source'''
            iframe = gtk.Frame(name)
            iframe.set_label_align(1.0, .5)
            ivbox = gtk.VBox()
            iframe.add(ivbox)
            hbox = gtk.HBox()
            ivbox.pack_start(hbox)

            idx = 'curtemp' + letter
            thisbox[idx] = gtk.Label()
            thisbox[idx].set_alignment(0., .5)
            thisbox[idx].set_padding(5, 0)
            #thisbox[idx].modify_bg(gtk.STATE_NORMAL,
            #                             gtk.gdk.Color(65535, 65535, 0))
            thisbox[idx].modify_font(pango.FontDescription(self.bigfont))
            hbox.pack_start(thisbox[idx])

            idx = 'curcond' + letter
            thisbox[idx] = gtk.Label()
            thisbox[idx].set_alignment(0., .5)
            hbox.pack_start(thisbox[idx])

            hbox = gtk.HBox()
            ivbox.pack_start(hbox)
            thisbox['expecting' + letter] = gtk.Label()
            hbox.pack_start(thisbox['expecting' + letter])

            iframe.show_all()
            return iframe

        city_hbox = gtk.HBox()
        vbox.pack_start(city_hbox)

        # Temperature and conditions from Yahoo
        if 'yahoo' in sources:
            iframe = add_group_widgets('Yahoo', 'Y')
            city_hbox.pack_start(iframe)

        # Temp and conditions from weather.com
        if 'weather.com' in sources:
            iframe = add_group_widgets('Weather.com', 'W')
            city_hbox.pack_start(iframe)

        # Temp and conditions from NOAA
        # if 'noaa' in sources:
        #     add_group_widgets('NOAA', 'N')

        self.cityboxes.append(thisbox)

        vbox.show_all()

    def update_weather(self):
        def update_boxes(l, temp, condition, forecast):
            box['curtemp' + l].set_text(temp)
            box['curcond' + l].set_text(condition)
            box['expecting' + l].set_text(forecast)

        for box in self.cityboxes:
            if 'yahoo' in sources:
                weatherY = pywapi.get_weather_from_yahoo(box['code'],
                                                         'imperial')
                update_boxes('Y', weatherY['condition']['temp'],
                             weatherY['condition']['text'] + \
                            ', humidity ' +  weatherY['atmosphere']['humidity'],
                             'Expecting %s, %s' % \
                                 (weatherY['forecasts'][0]['high'],
                                  weatherY['forecasts'][0]['text']))

            if 'weather.com' in sources:
                weatherW = pywapi.get_weather_from_weather_com(box['code'],
                                                               'imperial')
                update_boxes('W',
                             weatherW['current_conditions']['temperature'],
                             weatherW['current_conditions']['text'] + \
                                 ', humidity ' + \
                                 weatherW['current_conditions']['humidity'],
                             'Dewpoint: ' + \
                                    weatherW['current_conditions']['dewpoint'])

    # Some generic weather utilities:

    @staticmethod
    def c2f(c):
        return int(float(c) * 1.8 + 32)

    @staticmethod
    def get_code(city):

        loclist = pywapi.get_location_ids(city)
        if not loclist:
            return None, None

        loc = None
        if len(loclist.keys()) == 1:
            loc = loclist.keys()[0]
        else:
            # First see if any of the sites matches exactly
            for key in loclist.keys():
                if loclist[key] == city:
                    loc = key

            if not loc:
                print "Sites matching", city, ':'
                pprint(loclist)
                return None, None

        return loc, loclist[loc]

    def configure_event(self, widget, event) :
        self.update_weather()

    def timer_func(self) :
        self.update_weather()
        return True

win = WeatherWin()

for city in sys.argv[1:]:
    win.add_city(city)

win.run()

